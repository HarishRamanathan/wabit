<!--
	Some helpful Maven commands: 
	* 'mvn assembly:assembly' to build the distributables 
	* 'mvn test' to run the unit tests 
	* 'mvn surefire-report:report' to run the unit test and build an HTML report
	* 'mvn javadoc:javadoc' to generate the Javadoc for the source code
	* 'mvn pmd:pmd' to run the PMD code analysis tool
	* 'mvn pmd:cpd' to run the PMD Copy Paste Detector
	* 'mvn findbugs:findbugs' to run FindBugs. (You may have increasing the heap size by setting MAVEN_OPTS)
-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>ca.sqlpower.wabit</groupId>
	<artifactId>wabit</artifactId>
	<packaging>jar</packaging>
	<version>1.1.1</version>
	<name>wabit</name>
	<url>http://code.google.com/p/wabit</url>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
			<resource>
				<directory>src/main/jdbc</directory>			
			</resource>
		</resources>
		<plugins>
	        <plugin>
                <groupId>com.agilejava.docbkx</groupId>
                <artifactId>docbkx-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>generate-html</goal>
                            <goal>generate-pdf</goal>
                        </goals>
                        <phase>site</phase>
                    </execution>
                </executions>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<!-- <fork>true</fork> -->
					<!-- Set this if you wish to use a different JDK from your default -->
					<!-- <executable>${JAVA_HOME}/bin/javac</executable> -->
					<compilerVersion>1.5</compilerVersion>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
			    <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-surefire-plugin</artifactId>
		        <configuration>
		        	<testFailureIgnore>true</testFailureIgnore>
		    	</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/lib</outputDirectory>
							<includeScope>compile</includeScope>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<executions>
					<execution>
						<id>executable-jar</id>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
						<inherited>false</inherited>
						<configuration>
							<excludes>
								<!--
									This exclusion is to prevent the JAR plugin from bundling the JDBC
									.jar files together in the wabit.jar, as JarURLConnection does not
									support nested JAR files. Each plugin that generates the
									distributables for each platform arranges for the JDBC jar files
									to be resources on the classpath. See src/main/jdbc/README_JDBC
									for details.
								-->
								<exclude>*.jar</exclude>
							</excludes>
							<finalName>wabit</finalName>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<mainClass>ca.sqlpower.wabit.swingui.WabitSwingSessionContextImpl</mainClass>
									<classpathPrefix>lib/</classpathPrefix>
								</manifest>
								<manifestEntries>
									<Class-Path>
										jdbc/
										lib/apache-mime4j-0.5.jar
										lib/architect-dbtree.jar
										lib/architect-core.jar
										lib/commons-math-1.0.jar
										lib/commons-vfs.jar
										lib/eigenbase-properties.jar
										lib/eigenbase-resgen.jar
										lib/eigenbase-xom.jar
										lib/javacup.jar
										lib/jcommon-1.0.15.jar
										lib/jfreechart-1.0.12.jar
										lib/jmdns.jar
										lib/miglayout-3.7.jar
										lib/mondrian.jar
										lib/olap4j.jar
										lib/wabit-osx.jar
										lib/piccolo.jar
										lib/piccolox.jar
										lib/rsyntaxtextarea.jar
										lib/simple-jndi-0.11.4.1.jar
										lib/wabit-help.jar
			                            </Class-Path>
								</manifestEntries>
							</archive>
						</configuration>
					</execution>
					<execution>
						<id>test-jar</id>
						<phase>package</phase>
						<goals>
							<goal>test-jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<finalName>wabit-generic-${project.version}</finalName>
					<descriptors>
						<descriptor>src/main/assembly/assembly-generic.xml</descriptor>
					</descriptors>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.izpack</groupId>
				<artifactId>izpack-maven-plugin</artifactId>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>izpack</goal>
						</goals>
						<configuration>
							<izpackBasedir>target/</izpackBasedir>
							<descriptor>src/main/installer/install.xml</descriptor>
							<installerFile>target/Wabit-Setup-Windows-${project.version}.jar</installerFile>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<dependencies>
			        <dependency>
		    			<groupId>org.apache.ant</groupId>
		    			<artifactId>ant-nodeps</artifactId>
		    			<version>1.7.1</version>
					</dependency> 
				</dependencies>
				<executions>
					<execution>
						<id>appbundle</id>
						<phase>package</phase>
						<configuration>
							<tasks>
								<taskdef name="jarbundler"
									classpath="src/main/installer/osx/jarbundler.jar:src/main/installer/osx/xercesImpl.jar:src/main/installer/osx/xml-apis.jar"
									classname="net.sourceforge.jarbundler.JarBundler" />
								<!-- The pre-compiled osx adapter class (it only compiles on OS X) -->
								<copy file="src/main/installer/osx/osx_adapter.jar" todir="target/lib" />

								<copy todir="target/jdbc">
									<fileset dir="src/main/jdbc">
									   <include name="*.jar" />
									</fileset>
								</copy>
								
								<copy todir="target">
									<fileset dir="">
									   <include name="LICENSE" />
									</fileset>
								</copy>

								<property file="src/main/resources/ca/sqlpower/wabit/wabit.properties" />

								<!-- jarbundler is from sourceforge, defined near top of file -->
								<jarbundler dir="target" name="Wabit" version="${app.version}"
									mainclass="ca.sqlpower.wabit.swingui.WabitSwingSessionContextImpl"
									icon="src/main/resources/icons/wabit.icns"
									jvmversion="1.5+" shortname="Wabit"
									stubfile="src/main/installer/osx/JavaApplicationStub"
									vmoptions="-Xms256m -Xmx1024m">
									<jarfileset dir="target" includes="lib/*.jar" />
									<jarfileset dir="target" includes="wabit.jar" />
									<jarfileset dir="target" includes="jdbc/*.jar" />
									<extraclasspathfilelist dir="KICKME"
										files="jdbc" />
								</jarbundler>

								<!--
									XXX this is stupid. we should modify the jarbundler task to
									allow literal strings in the classpath
								-->
								<replace file="target/Wabit.app/Contents/Info.plist"
									token="KICKME" value="$JAVAROOT" />

								<!-- NOTE: This generally won't work on Windows as it typically doesn't have 'tar' installed -->
								<exec executable="tar" dir="target">
									<arg value="-cpzf" />
									<arg value="Wabit-OSX-${app.version}.tar.gz"/>
									<arg value="LICENSE"/>
									<arg value="Wabit.app"/>
								</exec>

<!--								<tar destfile="target/Wabit-OSX-${project.version}.tar.gz"-->
<!--									compression="gzip">-->
<!--									<tarfileset dir="target" includes="Wabit.app/**" />-->
<!--									<tarfileset dir="." includes="LICENSE" />-->
<!--								</tar>-->
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>download-page</id>
						<phase>site</phase>
						<configuration>
							<tasks>
								<echo message="Building Wabit version" />
								<!-- The directory where the Java source files are -->
								<property name="src" value="src" />
								<property name="dist.base" value="dist" />
					
								<tstamp>
									<format property="date" pattern="yyyyMMddHHmmss" />
								</tstamp>
								<!--
									If the nightly build property is set, then version number uses the
									date as the suffix Would be REALLY nice if Ant conditions support
									setting multiple properties, but doesn't as of 1.7.0
								-->
								<condition property="app.ver.suffix" value="-${date}">
									<isset property="nightly" />
								</condition>
								<!-- Else, if app_ver_suffix is empty, then don't use a suffix -->
								<condition property="app.ver.suffix" value="">
									<and>
										<equals arg1="${app_ver_suffix}" arg2="" />
										<not>
											<isset property="app.ver.suffix" />
										</not>
									</and>
								</condition>
								<!-- otherwise, use the normal app_ver_suffix as the suffix -->
								<condition property="app.ver.suffix" value="-${app_ver_suffix}">
									<not>
										<isset property="app.ver.suffix" />
									</not>
								</condition>
								<property file="src/main/resources/ca/sqlpower/wabit/wabit.properties" />
								<condition property="downloadLinkBase"
									value="http://nightlybuild.sqlpower.ca/wabit/nightly/${app.version}">
									<isset property="nightly" />
								</condition>
								<condition property="docLinkBase" value="${downloadLinkBase}">
									<isset property="nightly" />
								</condition>
								<condition property="downloadLinkBase" value="http://wabit.googlecode.com/files">
									<not>
										<isset property="downloadLinkBase" />
									</not>
								</condition>
								<condition property="docLinkBase"
									value="http://download.sqlpower.ca/wabit/${app.version}">
									<not>
										<isset property="docLinkBase" />
									</not>
								</condition>
					
								<get dest="target/index.html" src="http://www.sqlpower.ca/page/wabit_download_template" />
								<replace file="target/index.html">
									<replacefilter token="&lt;head&gt;"
										value="&lt;head&gt;&lt;base href=&quot;http://www.sqlpower.ca/page/&quot;&gt;" />
									<replacefilter token="@@app_version" value="${app.version}" />
									<replacefilter token="@@downloadLinkBase" value="${downloadLinkBase}" />
									<replacefilter token="@@docLinkBase" value="${docLinkBase}" />
								</replace>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>version</id>
						<phase>generate-resources</phase>
						<configuration>
							<tasks>
								<taskdef name="propertyfile" classname="org.apache.tools.ant.taskdefs.optional.PropertyFile"/>
								<tstamp>
           							<format property="date" pattern="yyyyMMddHHmmss"/>
        						</tstamp>
								<condition property ="version.suffix" value="-${date}">
                               		<isset property="nightly"/>     
                           		</condition>
                           		<condition property ="version.suffix" value="">
                               		<not><isset property="nightly"/></not>     
                           		</condition>
                           		<property name="app.version" value="${project.version}${version.suffix}"/>
                           		
								<propertyfile
								    file="src/main/resources/ca/sqlpower/wabit/wabit.properties"
								    comment="Wabit Version">
								  <entry key="app.version" value="${app.version}"/>
								</propertyfile>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>launch4j-executables</id>
						<phase>prepare-package</phase>
						<configuration>
							<tasks>
								<!-- There's a Maven plugin for launch4j, but it uses an old version
								of launch4j (1.0.0.2) -->
							
								<!-- When the build runs on a Mac, we can create the .dmg disk image
								     using the native hdiutil program.  Otherwise, we just make a .tar.gz.
								-->
								<condition property="isMac">
									<os family="mac"/>
								</condition>
							
								<condition property="isNotMac">
									<not>
										<os family="mac"/>
									</not>
								</condition>
							
								<!-- When the build runs on Windows, we can create the .exe executable
								     using the izpack2exe's exe tool. Otherwise, we would use python
								     along with the python izpack2exe python script.
								-->
								<condition property="isWindows">
									<os family="windows"/>
								</condition>
							
								<condition property="isNotWindows">
									<not>
										<os family="windows"/>
									</not>
								</condition>
							
								<!-- 
									Actually, I wanted to test for if this is Linux so to know which
									launch4j binaries to use, but unfortunately, there is no 'linux' 
									value, just unix. So if it's unix, then we will try to use the linux binary.
								-->
								<condition property="isUnix">
									<os family="unix"/>
								</condition>
							
								<condition property="isNotUnix">
									<not>
										<os family="unix"/>
									</not>
								</condition>
								
								<condition property="launch4j.dir" value="src/main/installer/launch4j/launch4j-macosx" >
									<isset property="isMac"/>
								</condition>
								
								<condition property="launch4j.dir" value="src/main/installer/launch4j/launch4j-linux" >
									<isset property="isUnix"/>
								</condition>
								
								<condition property="launch4j.dir" value="src/main/installer/launch4j/launch4j-win32" >
									<isset property="isWindows"/>
								</condition>
								
								<taskdef name="launch4j"
								    classname="net.sf.launch4j.ant.Launch4jTask"
								    classpath="${launch4j.dir}/launch4j.jar
								        :${launch4j.dir}/lib/xstream.jar" />
								        
				        		<launch4j>
									<config dontwrapjar="true" 
											headertype="gui"
											jarpath="wabit.jar"
											outfile="target/wabit.exe"
											errtitle="Java Runtime Required"
											priority="normal"
											downloadurl="http://java.com/download"
											supporturl="http://www.sqlpower.ca/forum"
											customprocname="false"
											stayalive="false"
											icon="src/main/resources/icons/wabit.ico">
										<jre minVersion="1.5.0"
											 maxHeapSize="600"
										/>
									</config>
								</launch4j>
						    	
						    	<launch4j>
									<config dontwrapjar="true" 
											headertype="gui"
											jarpath="uninstaller.jar"
											outfile="target/uninstaller.exe"
											errtitle="Java Runtime Required"
											priority="normal"
											downloadurl="http://java.com/download"
											supporturl="http://www.sqlpower.ca/forum"
											customprocname="false"
											stayalive="false"
											icon="src/main/installer/uninstall.ico">
										<singleInstance
											mutexName="Wabit Uninstaller"
											windowTitle="Wabit Uninstaller"
										/>
										<jre minVersion="1.5.0"/>
									</config>
								</launch4j>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>launch4j-installer</id>
						<phase>package</phase>
						<configuration>
							<tasks>
								<property file="src/main/resources/ca/sqlpower/wabit/wabit.properties" />
							
								<!-- There's a Maven plugin for launch4j, but it uses an old version
								of launch4j (1.0.0.2) -->
							
								<!-- When the build runs on a Mac, we can create the .dmg disk image
								     using the native hdiutil program.  Otherwise, we just make a .tar.gz.
								-->
								<condition property="isMac">
									<os family="mac"/>
								</condition>
							
								<condition property="isNotMac">
									<not>
										<os family="mac"/>
									</not>
								</condition>
							
								<!-- When the build runs on Windows, we can create the .exe executable
								     using the izpack2exe's exe tool. Otherwise, we would use python
								     along with the python izpack2exe python script.
								-->
								<condition property="isWindows">
									<os family="windows"/>
								</condition>
							
								<condition property="isNotWindows">
									<not>
										<os family="windows"/>
									</not>
								</condition>
							
								<!-- 
									Actually, I wanted to test for if this is Linux so to know which
									launch4j binaries to use, but unfortunately, there is no 'linux' 
									value, just unix. So if it's unix, then we will try to use the linux binary.
								-->
								<condition property="isUnix">
									<os family="unix"/>
								</condition>
							
								<condition property="isNotUnix">
									<not>
										<os family="unix"/>
									</not>
								</condition>
								
								<condition property="launch4j.dir" value="src/main/installer/launch4j/launch4j-macosx" >
									<isset property="isMac"/>
								</condition>
								
								<condition property="launch4j.dir" value="src/main/installer/launch4j/launch4j-linux" >
									<isset property="isUnix"/>
								</condition>
								
								<condition property="launch4j.dir" value="src/main/installer/launch4j/launch4j-win32" >
									<isset property="isWindows"/>
								</condition>
								
								<taskdef name="launch4j"
								    classname="net.sf.launch4j.ant.Launch4jTask"
								    classpath="${launch4j.dir}/launch4j.jar
								        :${launch4j.dir}/lib/xstream.jar" />
								        
				        		<launch4j>
									<config dontwrapjar="false" 
											headertype="gui"
											jar="target/Wabit-Setup-Windows-${project.version}.jar"
											outfile="target/Wabit-Setup-Windows-${app.version}.exe"
											errtitle="Java Runtime Required"
											priority="normal"
											downloadurl="http://java.com/download"
											supporturl="http://www.sqlpower.ca/forum"
											customprocname="false"
											stayalive="false"
											icon="src/main/installer/installer-w.ico">
										<singleInstance
											mutexName="Wabit Installer"
											windowTitle="Wabit Installer"
										/>
										<jre minVersion="1.5.0"/>
									</config>
								</launch4j>
							</tasks>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<configuration>
					<targetJdk>1.5</targetJdk>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.0.1</version>
				<configuration>
				  <findbugsXmlOutput>true</findbugsXmlOutput>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	
	<dependencies>
		<dependency>
		    <groupId>xerces</groupId>
		    <artifactId>xercesImpl</artifactId>
		    <version>2.9.1</version>
		    <scope>compile</scope>
		</dependency> 
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>ca.sqlpower</groupId>
			<artifactId>sqlpower-library</artifactId>
			<version>1.0-SNAPSHOT</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>ca.sqlpower</groupId>
			<artifactId>sqlpower-library</artifactId>
			<version>1.0-SNAPSHOT</version>
			<classifier>tests</classifier>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>edu.umd.cs</groupId>
			<artifactId>piccolo</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>edu.umd.cs</groupId>
			<artifactId>piccolox</artifactId>
			<version>1.2.1</version>
		</dependency>
		<dependency>
			<groupId>ca.sqlpower.architect</groupId>
			<artifactId>architect-core</artifactId>
			<version>0.9.12-alpha</version>
		</dependency>
		<dependency>
			<groupId>ca.sqlpower.architect</groupId>
			<artifactId>architect-dbtree</artifactId>
			<version>0.9.14-alpha</version>
		</dependency>
		<dependency>
            <groupId>jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>1.0.12</version>
            <scope>compile</scope>
        </dependency>
		<dependency>
            <groupId>jfree</groupId>
            <artifactId>jcommon</artifactId>
            <version>1.0.15</version>
            <scope>compile</scope>
        </dependency>
		<dependency>
			<groupId>org.fife</groupId>
			<artifactId>rsyntaxtextarea</artifactId>
			<version>1.0</version>
		</dependency>
		<dependency>
            <groupId>ca.sqlpower.wabit</groupId>
            <artifactId>wabit-osx</artifactId>
            <version>1.0</version>
        </dependency>
        <dependency>
            <groupId>ca.sqlpower.wabit</groupId>
            <artifactId>wabit-help</artifactId>
            <version>1.0</version>
        </dependency>
		<dependency>
			<groupId>com.jgoodies</groupId>
			<artifactId>forms</artifactId>
			<version>1.2.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.8</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.servlet.jsp</groupId>
			<artifactId>jsp-api</artifactId>
			<version>2.1</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.8.0</version>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
			<version>2.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymockclassextension</artifactId>
			<version>2.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.lowagie</groupId>
			<artifactId>itext</artifactId>
			<version>2.1.3</version>
		</dependency> 
		<dependency>
            <groupId>org.docbook</groupId>
            <artifactId>docbook-xml</artifactId>
            <version>4.4</version>
        </dependency>
        <dependency>
		    <groupId>com.sun.woodstock.dependlibs</groupId>
		    <artifactId>jhall</artifactId>
		    <version>2.0</version>
		</dependency>
        <dependency>
            <groupId>javax.jmdns</groupId>
            <artifactId>jmdns</artifactId>
            <version>2.1</version>
        </dependency>
        
        <dependency>
            <groupId>simple-jndi</groupId>
            <artifactId>simple-jndi</artifactId>
            <version>0.11.4.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
        	<groupId>com.miglayout</groupId>
			<artifactId>miglayout</artifactId>
			<version>3.7</version>
			<classifier>swing</classifier>
		</dependency>
        <dependency>
			<groupId>org.apache.james</groupId>
			<artifactId>apache-mime4j</artifactId>
			<version>0.5</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
			<version>1.3</version>
		</dependency>
        <dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
		</dependency>
        <dependency>
            <groupId>commons-pool</groupId>
            <artifactId>commons-pool</artifactId>
            <version>1.5.1</version>
        </dependency>
        <dependency>
            <groupId>commons-dbcp</groupId>
            <artifactId>commons-dbcp</artifactId>
            <version>1.2.2</version>
        </dependency>
        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
            <version>3.2.1</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>servlet-api</artifactId>
            <version>2.4</version>
        </dependency>
        <dependency>
            <groupId>net.sf.opencsv</groupId>
            <artifactId>opencsv</artifactId>
            <version>1.8</version>
        </dependency>
        <dependency>
            <groupId>pentaho</groupId>
            <artifactId>mondrian</artifactId>
            <version>3.1.1</version>
        </dependency>
        <dependency>
            <groupId>org.olap4j</groupId>
            <artifactId>olap4j</artifactId>
            <version>0.9.8-SNAPSHOT</version>
        </dependency>
        <dependency>
		  	<groupId>javacup</groupId>
		  	<artifactId>javacup</artifactId>
		  	<version>10k</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
		  	<groupId>commons-math</groupId>
		  	<artifactId>commons-math</artifactId>
		  	<version>1.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
		  	<groupId>commons-vfs</groupId>
		  	<artifactId>commons-vfs</artifactId>
		  	<version>1.0</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
		  	<groupId>eigenbase</groupId>
		  	<artifactId>eigenbase-properties</artifactId>
		  	<version>1.1.0.10924</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>eigenbase</groupId>
            <artifactId>eigenbase-resgen</artifactId>
            <version>1.3.0.11873</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>eigenbase</groupId>
            <artifactId>eigenbase-xom</artifactId>
            <version>1.3.0.11999</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>javax.mail</groupId>
            <artifactId>mail</artifactId>
            <version>1.4</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
	       <groupId>commons-codec</groupId>
	       <artifactId>commons-codec</artifactId>
	       <version>20041127.091804</version>
        </dependency>
        <dependency>
        	<groupId>com.google.code.findbugs</groupId>
        	<artifactId>annotations</artifactId>
        	<version>1.3.9</version>
        	<type>jar</type>
        	<scope>compile</scope>
        </dependency>
        <dependency>
        	<groupId>com.google.code.findbugs</groupId>
        	<artifactId>jsr305</artifactId>
        	<version>1.3.9</version>
        	<scope>compile</scope>
        </dependency>
        <dependency>
        	<groupId>org.apache.httpcomponents</groupId>
        	<artifactId>httpmime</artifactId>
        	<version>4.0</version>
        	<type>jar</type>
        	<scope>compile</scope>
        </dependency>
        <dependency>
        	<groupId>org.apache.httpcomponents</groupId>
        	<artifactId>httpcore</artifactId>
        	<version>4.0.1</version>
        	<type>jar</type>
        	<scope>compile</scope>
        </dependency>
        <dependency>
            <groupId>commons-httpclient</groupId>
            <artifactId>commons-httpclient</artifactId>
            <version>3.1</version>
            <scope>compile</scope>
        </dependency>
        <dependency>
        	<groupId>org.apache.httpcomponents</groupId>
        	<artifactId>httpclient</artifactId>
        	<version>4.0</version>
        	<type>jar</type>
        	<scope>compile</scope>
        </dependency>
        <dependency>
        	<groupId>com.google.collections</groupId>
        	<artifactId>google-collections</artifactId>
        	<version>1.0-rc2</version>
        </dependency>
        <dependency>
        	<groupId>com.kitfox.svg</groupId>
        	<artifactId>svg-salamander</artifactId>
        	<version>1.0</version>
        </dependency>
	</dependencies>
	<repositories>
	   <repository>
            <id>maven-central</id>
            <url>http://repo2.maven.org/maven2/</url>
        </repository>
		<repository>
			<id>java.net</id>
			<url>http://download.java.net/maven/2</url>
			<layout>default</layout>
		</repository>
        <repository>
            <id>pentaho-repo</id>
            <url>http://repo.pentaho.org/artifactory/pentaho/</url>
        </repository>
        <repository>
			<id>pentaho-third-party</id>
			<url>http://repo.pentaho.org/artifactory/third-party/</url>
        </repository>
        <repository>
            <id>sqlpg</id>
            <url>http://pag.sqlpower.ca:8080/nexus/content/groups/public/</url>
        </repository>
        <repository>
            <id>sqlpg-thirdparty</id>
            <url>http://pag.sqlpower.ca:8080/nexus/content/repositories/thirdparty/</url>
        </repository>
	</repositories>
</project>
